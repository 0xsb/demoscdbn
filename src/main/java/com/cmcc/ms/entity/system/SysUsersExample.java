package com.cmcc.ms.entity.system;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;



/**
 * The Class SysUsersExample.
 *
 * @author ldy
 */
public class SysUsersExample {

    /** The page index. */
    private int pageIndex;

    /** The page size. */
    private int pageSize;

    /**
     * Gets the page index.
     *
     * @return the page index
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * Sets the page index.
     *
     * @param pageIndex the new page index
     */
    public void setPageIndex(int pageIndex) {
        this.pageIndex = pageIndex;
    }

    /**
     * Gets the page size.
     *
     * @return the page size
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * Sets the page size.
     *
     * @param pageSize the new page size
     */
    public void setPageSize(int pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table sys_users
     * 
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table sys_users
     * 
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table sys_users
     * 
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     * 
     * @mbggenerated
     */
    public SysUsersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @param orderByClause the new order by clause
     * @mbggenerated 
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @return the order by clause
     * @mbggenerated 
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @param distinct the new distinct
     * @mbggenerated 
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @return true, if is distinct
     * @mbggenerated 
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @return the ored criteria
     * @mbggenerated 
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @param criteria the criteria
     * @mbggenerated 
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @return the criteria
     * @mbggenerated 
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @return the criteria
     * @mbggenerated 
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     *
     * @return the criteria
     * @mbggenerated 
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table sys_users
     * 
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table sys_users
     * 
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {

        /** The criteria. */
        protected List<Criterion> criteria;

        /**
         * Instantiates a new generated criteria.
         */
        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        /**
         * Checks if is valid.
         *
         * @return true, if is valid
         */
        public boolean isValid() {
            return criteria.size() > 0;
        }

        /**
         * Gets the all criteria.
         *
         * @return the all criteria
         */
        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**
         * Gets the criteria.
         *
         * @return the criteria
         */
        public List<Criterion> getCriteria() {
            return criteria;
        }

        /**
         * Adds the criterion.
         *
         * @param condition the condition
         */
        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        /**
         * Adds the criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param property the property
         */
        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        /**
         * Adds the criterion.
         *
         * @param condition the condition
         * @param value1 the value 1
         * @param value2 the value 2
         * @param property the property
         */
        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        /**
         * Adds the criterion for JDBC date.
         *
         * @param condition the condition
         * @param value the value
         * @param property the property
         */
        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        /**
         * Adds the criterion for JDBC date.
         *
         * @param condition the condition
         * @param values the values
         * @param property the property
         */
        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property
                        + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        /**
         * Adds the criterion for JDBC date.
         *
         * @param condition the condition
         * @param value1 the value 1
         * @param value2 the value 2
         * @param property the property
         */
        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
                                               String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()),
                    new java.sql.Date(value2.getTime()), property);
        }

        /**
         * And user id is null.
         *
         * @return the criteria
         */
        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        /**
         * And user id is not null.
         *
         * @return the criteria
         */
        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        /**
         * And user id equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        /**
         * And user id not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * And user id greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        /**
         * And user id greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * And user id less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        /**
         * And user id less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * And user id in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        /**
         * And user id not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        /**
         * And user id between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        /**
         * And user id not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        /**
         * And user name is null.
         *
         * @return the criteria
         */
        public Criteria andUserNameIsNull() {
            addCriterion("USER_NAME is null");
            return (Criteria) this;
        }

        /**
         * And user name is not null.
         *
         * @return the criteria
         */
        public Criteria andUserNameIsNotNull() {
            addCriterion("USER_NAME is not null");
            return (Criteria) this;
        }

        /**
         * And user name equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameEqualTo(String value) {
            addCriterion("USER_NAME =", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("USER_NAME <>", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("USER_NAME >", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("USER_NAME >=", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameLessThan(String value) {
            addCriterion("USER_NAME <", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("USER_NAME <=", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameLike(String value) {
            addCriterion("USER_NAME like", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserNameNotLike(String value) {
            addCriterion("USER_NAME not like", value, "userName");
            return (Criteria) this;
        }

        /**
         * And user name in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserNameIn(List<String> values) {
            addCriterion("USER_NAME in", values, "userName");
            return (Criteria) this;
        }

        /**
         * And user name not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("USER_NAME not in", values, "userName");
            return (Criteria) this;
        }

        /**
         * And user name between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("USER_NAME between", value1, value2, "userName");
            return (Criteria) this;
        }

        /**
         * And user name not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("USER_NAME not between", value1, value2, "userName");
            return (Criteria) this;
        }

        /**
         * And user password is null.
         *
         * @return the criteria
         */
        public Criteria andUserPasswordIsNull() {
            addCriterion("USER_PASSWORD is null");
            return (Criteria) this;
        }

        /**
         * And user password is not null.
         *
         * @return the criteria
         */
        public Criteria andUserPasswordIsNotNull() {
            addCriterion("USER_PASSWORD is not null");
            return (Criteria) this;
        }

        /**
         * And user password equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordEqualTo(String value) {
            addCriterion("USER_PASSWORD =", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordNotEqualTo(String value) {
            addCriterion("USER_PASSWORD <>", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordGreaterThan(String value) {
            addCriterion("USER_PASSWORD >", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("USER_PASSWORD >=", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordLessThan(String value) {
            addCriterion("USER_PASSWORD <", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordLessThanOrEqualTo(String value) {
            addCriterion("USER_PASSWORD <=", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordLike(String value) {
            addCriterion("USER_PASSWORD like", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserPasswordNotLike(String value) {
            addCriterion("USER_PASSWORD not like", value, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserPasswordIn(List<String> values) {
            addCriterion("USER_PASSWORD in", values, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserPasswordNotIn(List<String> values) {
            addCriterion("USER_PASSWORD not in", values, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserPasswordBetween(String value1, String value2) {
            addCriterion("USER_PASSWORD between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user password not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserPasswordNotBetween(String value1, String value2) {
            addCriterion("USER_PASSWORD not between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        /**
         * And user relname is null.
         *
         * @return the criteria
         */
        public Criteria andUserRelnameIsNull() {
            addCriterion("USER_RELNAME is null");
            return (Criteria) this;
        }

        /**
         * And user relname is not null.
         *
         * @return the criteria
         */
        public Criteria andUserRelnameIsNotNull() {
            addCriterion("USER_RELNAME is not null");
            return (Criteria) this;
        }

        /**
         * And user relname equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameEqualTo(String value) {
            addCriterion("USER_RELNAME =", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameNotEqualTo(String value) {
            addCriterion("USER_RELNAME <>", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameGreaterThan(String value) {
            addCriterion("USER_RELNAME >", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameGreaterThanOrEqualTo(String value) {
            addCriterion("USER_RELNAME >=", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameLessThan(String value) {
            addCriterion("USER_RELNAME <", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameLessThanOrEqualTo(String value) {
            addCriterion("USER_RELNAME <=", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameLike(String value) {
            addCriterion("USER_RELNAME like", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserRelnameNotLike(String value) {
            addCriterion("USER_RELNAME not like", value, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserRelnameIn(List<String> values) {
            addCriterion("USER_RELNAME in", values, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserRelnameNotIn(List<String> values) {
            addCriterion("USER_RELNAME not in", values, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserRelnameBetween(String value1, String value2) {
            addCriterion("USER_RELNAME between", value1, value2, "userRelname");
            return (Criteria) this;
        }

        /**
         * And user relname not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserRelnameNotBetween(String value1, String value2) {
            addCriterion("USER_RELNAME not between", value1, value2, "userRelname");
            return (Criteria) this;
        }

        /**
         * And role id is null.
         *
         * @return the criteria
         */
        public Criteria andRoleIdIsNull() {
            addCriterion("ROLE_ID is null");
            return (Criteria) this;
        }

        /**
         * And role id is not null.
         *
         * @return the criteria
         */
        public Criteria andRoleIdIsNotNull() {
            addCriterion("ROLE_ID is not null");
            return (Criteria) this;
        }

        /**
         * And role id equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andRoleIdEqualTo(Integer value) {
            addCriterion("ROLE_ID =", value, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andRoleIdNotEqualTo(Integer value) {
            addCriterion("ROLE_ID <>", value, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andRoleIdGreaterThan(Integer value) {
            addCriterion("ROLE_ID >", value, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andRoleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ROLE_ID >=", value, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andRoleIdLessThan(Integer value) {
            addCriterion("ROLE_ID <", value, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andRoleIdLessThanOrEqualTo(Integer value) {
            addCriterion("ROLE_ID <=", value, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andRoleIdIn(List<Integer> values) {
            addCriterion("ROLE_ID in", values, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andRoleIdNotIn(List<Integer> values) {
            addCriterion("ROLE_ID not in", values, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andRoleIdBetween(Integer value1, Integer value2) {
            addCriterion("ROLE_ID between", value1, value2, "roleId");
            return (Criteria) this;
        }

        /**
         * And role id not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andRoleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ROLE_ID not between", value1, value2, "roleId");
            return (Criteria) this;
        }

        /**
         * And user desc is null.
         *
         * @return the criteria
         */
        public Criteria andUserDescIsNull() {
            addCriterion("USER_DESC is null");
            return (Criteria) this;
        }

        /**
         * And user desc is not null.
         *
         * @return the criteria
         */
        public Criteria andUserDescIsNotNull() {
            addCriterion("USER_DESC is not null");
            return (Criteria) this;
        }

        /**
         * And user desc equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescEqualTo(String value) {
            addCriterion("USER_DESC =", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescNotEqualTo(String value) {
            addCriterion("USER_DESC <>", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescGreaterThan(String value) {
            addCriterion("USER_DESC >", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescGreaterThanOrEqualTo(String value) {
            addCriterion("USER_DESC >=", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescLessThan(String value) {
            addCriterion("USER_DESC <", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescLessThanOrEqualTo(String value) {
            addCriterion("USER_DESC <=", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescLike(String value) {
            addCriterion("USER_DESC like", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andUserDescNotLike(String value) {
            addCriterion("USER_DESC not like", value, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserDescIn(List<String> values) {
            addCriterion("USER_DESC in", values, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andUserDescNotIn(List<String> values) {
            addCriterion("USER_DESC not in", values, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserDescBetween(String value1, String value2) {
            addCriterion("USER_DESC between", value1, value2, "userDesc");
            return (Criteria) this;
        }

        /**
         * And user desc not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andUserDescNotBetween(String value1, String value2) {
            addCriterion("USER_DESC not between", value1, value2, "userDesc");
            return (Criteria) this;
        }

        /**
         * And create date is null.
         *
         * @return the criteria
         */
        public Criteria andCreateDateIsNull() {
            addCriterion("CREATE_DATE is null");
            return (Criteria) this;
        }

        /**
         * And create date is not null.
         *
         * @return the criteria
         */
        public Criteria andCreateDateIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return (Criteria) this;
        }

        /**
         * And create date equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCreateDateEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCreateDateLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andCreateDateIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
            return (Criteria) this;
        }

        /**
         * And create date not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        /**
         * And state is null.
         *
         * @return the criteria
         */
        public Criteria andStateIsNull() {
            addCriterion("STATE is null");
            return (Criteria) this;
        }

        /**
         * And state is not null.
         *
         * @return the criteria
         */
        public Criteria andStateIsNotNull() {
            addCriterion("STATE is not null");
            return (Criteria) this;
        }

        /**
         * And state equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateEqualTo(String value) {
            addCriterion("STATE =", value, "state");
            return (Criteria) this;
        }

        /**
         * And state not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateNotEqualTo(String value) {
            addCriterion("STATE <>", value, "state");
            return (Criteria) this;
        }

        /**
         * And state greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateGreaterThan(String value) {
            addCriterion("STATE >", value, "state");
            return (Criteria) this;
        }

        /**
         * And state greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateGreaterThanOrEqualTo(String value) {
            addCriterion("STATE >=", value, "state");
            return (Criteria) this;
        }

        /**
         * And state less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateLessThan(String value) {
            addCriterion("STATE <", value, "state");
            return (Criteria) this;
        }

        /**
         * And state less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateLessThanOrEqualTo(String value) {
            addCriterion("STATE <=", value, "state");
            return (Criteria) this;
        }

        /**
         * And state like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateLike(String value) {
            addCriterion("STATE like", value, "state");
            return (Criteria) this;
        }

        /**
         * And state not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andStateNotLike(String value) {
            addCriterion("STATE not like", value, "state");
            return (Criteria) this;
        }

        /**
         * And state in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andStateIn(List<String> values) {
            addCriterion("STATE in", values, "state");
            return (Criteria) this;
        }

        /**
         * And state not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andStateNotIn(List<String> values) {
            addCriterion("STATE not in", values, "state");
            return (Criteria) this;
        }

        /**
         * And state between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andStateBetween(String value1, String value2) {
            addCriterion("STATE between", value1, value2, "state");
            return (Criteria) this;
        }

        /**
         * And state not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andStateNotBetween(String value1, String value2) {
            addCriterion("STATE not between", value1, value2, "state");
            return (Criteria) this;
        }

        /**
         * And wrongcount is null.
         *
         * @return the criteria
         */
        public Criteria andWrongcountIsNull() {
            addCriterion("WRONGCOUNT is null");
            return (Criteria) this;
        }

        /**
         * And wrongcount is not null.
         *
         * @return the criteria
         */
        public Criteria andWrongcountIsNotNull() {
            addCriterion("WRONGCOUNT is not null");
            return (Criteria) this;
        }

        /**
         * And wrongcount equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andWrongcountEqualTo(Integer value) {
            addCriterion("WRONGCOUNT =", value, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andWrongcountNotEqualTo(Integer value) {
            addCriterion("WRONGCOUNT <>", value, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andWrongcountGreaterThan(Integer value) {
            addCriterion("WRONGCOUNT >", value, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andWrongcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("WRONGCOUNT >=", value, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andWrongcountLessThan(Integer value) {
            addCriterion("WRONGCOUNT <", value, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andWrongcountLessThanOrEqualTo(Integer value) {
            addCriterion("WRONGCOUNT <=", value, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andWrongcountIn(List<Integer> values) {
            addCriterion("WRONGCOUNT in", values, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andWrongcountNotIn(List<Integer> values) {
            addCriterion("WRONGCOUNT not in", values, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andWrongcountBetween(Integer value1, Integer value2) {
            addCriterion("WRONGCOUNT between", value1, value2, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And wrongcount not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andWrongcountNotBetween(Integer value1, Integer value2) {
            addCriterion("WRONGCOUNT not between", value1, value2, "wrongcount");
            return (Criteria) this;
        }

        /**
         * And lastwrotime is null.
         *
         * @return the criteria
         */
        public Criteria andLastwrotimeIsNull() {
            addCriterion("LASTWROTIME is null");
            return (Criteria) this;
        }

        /**
         * And lastwrotime is not null.
         *
         * @return the criteria
         */
        public Criteria andLastwrotimeIsNotNull() {
            addCriterion("LASTWROTIME is not null");
            return (Criteria) this;
        }

        /**
         * And lastwrotime equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andLastwrotimeEqualTo(Date value) {
            addCriterionForJDBCDate("LASTWROTIME =", value, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andLastwrotimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("LASTWROTIME <>", value, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andLastwrotimeGreaterThan(Date value) {
            addCriterionForJDBCDate("LASTWROTIME >", value, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andLastwrotimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LASTWROTIME >=", value, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andLastwrotimeLessThan(Date value) {
            addCriterionForJDBCDate("LASTWROTIME <", value, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andLastwrotimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LASTWROTIME <=", value, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andLastwrotimeIn(List<Date> values) {
            addCriterionForJDBCDate("LASTWROTIME in", values, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andLastwrotimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("LASTWROTIME not in", values, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andLastwrotimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LASTWROTIME between", value1, value2, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And lastwrotime not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andLastwrotimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LASTWROTIME not between", value1, value2, "lastwrotime");
            return (Criteria) this;
        }

        /**
         * And phone is null.
         *
         * @return the criteria
         */
        public Criteria andPhoneIsNull() {
            addCriterion("PHONE is null");
            return (Criteria) this;
        }

        /**
         * And phone is not null.
         *
         * @return the criteria
         */
        public Criteria andPhoneIsNotNull() {
            addCriterion("PHONE is not null");
            return (Criteria) this;
        }

        /**
         * And phone equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneEqualTo(String value) {
            addCriterion("PHONE =", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("PHONE <>", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("PHONE >", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("PHONE >=", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneLessThan(String value) {
            addCriterion("PHONE <", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("PHONE <=", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneLike(String value) {
            addCriterion("PHONE like", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andPhoneNotLike(String value) {
            addCriterion("PHONE not like", value, "phone");
            return (Criteria) this;
        }

        /**
         * And phone in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andPhoneIn(List<String> values) {
            addCriterion("PHONE in", values, "phone");
            return (Criteria) this;
        }

        /**
         * And phone not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("PHONE not in", values, "phone");
            return (Criteria) this;
        }

        /**
         * And phone between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("PHONE between", value1, value2, "phone");
            return (Criteria) this;
        }

        /**
         * And phone not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("PHONE not between", value1, value2, "phone");
            return (Criteria) this;
        }

        /**
         * And email is null.
         *
         * @return the criteria
         */
        public Criteria andEmailIsNull() {
            addCriterion("EMAIL is null");
            return (Criteria) this;
        }

        /**
         * And email is not null.
         *
         * @return the criteria
         */
        public Criteria andEmailIsNotNull() {
            addCriterion("EMAIL is not null");
            return (Criteria) this;
        }

        /**
         * And email equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailEqualTo(String value) {
            addCriterion("EMAIL =", value, "email");
            return (Criteria) this;
        }

        /**
         * And email not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("EMAIL <>", value, "email");
            return (Criteria) this;
        }

        /**
         * And email greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailGreaterThan(String value) {
            addCriterion("EMAIL >", value, "email");
            return (Criteria) this;
        }

        /**
         * And email greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("EMAIL >=", value, "email");
            return (Criteria) this;
        }

        /**
         * And email less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailLessThan(String value) {
            addCriterion("EMAIL <", value, "email");
            return (Criteria) this;
        }

        /**
         * And email less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("EMAIL <=", value, "email");
            return (Criteria) this;
        }

        /**
         * And email like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailLike(String value) {
            addCriterion("EMAIL like", value, "email");
            return (Criteria) this;
        }

        /**
         * And email not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andEmailNotLike(String value) {
            addCriterion("EMAIL not like", value, "email");
            return (Criteria) this;
        }

        /**
         * And email in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andEmailIn(List<String> values) {
            addCriterion("EMAIL in", values, "email");
            return (Criteria) this;
        }

        /**
         * And email not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("EMAIL not in", values, "email");
            return (Criteria) this;
        }

        /**
         * And email between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("EMAIL between", value1, value2, "email");
            return (Criteria) this;
        }

        /**
         * And email not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("EMAIL not between", value1, value2, "email");
            return (Criteria) this;
        }

        /**
         * And contacts is null.
         *
         * @return the criteria
         */
        public Criteria andContactsIsNull() {
            addCriterion("CONTACTS is null");
            return (Criteria) this;
        }

        /**
         * And contacts is not null.
         *
         * @return the criteria
         */
        public Criteria andContactsIsNotNull() {
            addCriterion("CONTACTS is not null");
            return (Criteria) this;
        }

        /**
         * And contacts equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsEqualTo(String value) {
            addCriterion("CONTACTS =", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsNotEqualTo(String value) {
            addCriterion("CONTACTS <>", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsGreaterThan(String value) {
            addCriterion("CONTACTS >", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsGreaterThanOrEqualTo(String value) {
            addCriterion("CONTACTS >=", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsLessThan(String value) {
            addCriterion("CONTACTS <", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsLessThanOrEqualTo(String value) {
            addCriterion("CONTACTS <=", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsLike(String value) {
            addCriterion("CONTACTS like", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andContactsNotLike(String value) {
            addCriterion("CONTACTS not like", value, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andContactsIn(List<String> values) {
            addCriterion("CONTACTS in", values, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andContactsNotIn(List<String> values) {
            addCriterion("CONTACTS not in", values, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andContactsBetween(String value1, String value2) {
            addCriterion("CONTACTS between", value1, value2, "contacts");
            return (Criteria) this;
        }

        /**
         * And contacts not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andContactsNotBetween(String value1, String value2) {
            addCriterion("CONTACTS not between", value1, value2, "contacts");
            return (Criteria) this;
        }

        /**
         * And company is null.
         *
         * @return the criteria
         */
        public Criteria andCompanyIsNull() {
            addCriterion("COMPANY is null");
            return (Criteria) this;
        }

        /**
         * And company is not null.
         *
         * @return the criteria
         */
        public Criteria andCompanyIsNotNull() {
            addCriterion("COMPANY is not null");
            return (Criteria) this;
        }

        /**
         * And company equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyEqualTo(String value) {
            addCriterion("COMPANY =", value, "company");
            return (Criteria) this;
        }

        /**
         * And company not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyNotEqualTo(String value) {
            addCriterion("COMPANY <>", value, "company");
            return (Criteria) this;
        }

        /**
         * And company greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyGreaterThan(String value) {
            addCriterion("COMPANY >", value, "company");
            return (Criteria) this;
        }

        /**
         * And company greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyGreaterThanOrEqualTo(String value) {
            addCriterion("COMPANY >=", value, "company");
            return (Criteria) this;
        }

        /**
         * And company less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyLessThan(String value) {
            addCriterion("COMPANY <", value, "company");
            return (Criteria) this;
        }

        /**
         * And company less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyLessThanOrEqualTo(String value) {
            addCriterion("COMPANY <=", value, "company");
            return (Criteria) this;
        }

        /**
         * And company like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyLike(String value) {
            addCriterion("COMPANY like", value, "company");
            return (Criteria) this;
        }

        /**
         * And company not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andCompanyNotLike(String value) {
            addCriterion("COMPANY not like", value, "company");
            return (Criteria) this;
        }

        /**
         * And company in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andCompanyIn(List<String> values) {
            addCriterion("COMPANY in", values, "company");
            return (Criteria) this;
        }

        /**
         * And company not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andCompanyNotIn(List<String> values) {
            addCriterion("COMPANY not in", values, "company");
            return (Criteria) this;
        }

        /**
         * And company between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andCompanyBetween(String value1, String value2) {
            addCriterion("COMPANY between", value1, value2, "company");
            return (Criteria) this;
        }

        /**
         * And company not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andCompanyNotBetween(String value1, String value2) {
            addCriterion("COMPANY not between", value1, value2, "company");
            return (Criteria) this;
        }

        /**
         * And token is null.
         *
         * @return the criteria
         */
        public Criteria andTokenIsNull() {
            addCriterion("TOKEN is null");
            return (Criteria) this;
        }

        /**
         * And token is not null.
         *
         * @return the criteria
         */
        public Criteria andTokenIsNotNull() {
            addCriterion("TOKEN is not null");
            return (Criteria) this;
        }

        /**
         * And token equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenEqualTo(String value) {
            addCriterion("TOKEN =", value, "token");
            return (Criteria) this;
        }

        /**
         * And token not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenNotEqualTo(String value) {
            addCriterion("TOKEN <>", value, "token");
            return (Criteria) this;
        }

        /**
         * And token greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenGreaterThan(String value) {
            addCriterion("TOKEN >", value, "token");
            return (Criteria) this;
        }

        /**
         * And token greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN >=", value, "token");
            return (Criteria) this;
        }

        /**
         * And token less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenLessThan(String value) {
            addCriterion("TOKEN <", value, "token");
            return (Criteria) this;
        }

        /**
         * And token less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenLessThanOrEqualTo(String value) {
            addCriterion("TOKEN <=", value, "token");
            return (Criteria) this;
        }

        /**
         * And token like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenLike(String value) {
            addCriterion("TOKEN like", value, "token");
            return (Criteria) this;
        }

        /**
         * And token not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andTokenNotLike(String value) {
            addCriterion("TOKEN not like", value, "token");
            return (Criteria) this;
        }

        /**
         * And token in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andTokenIn(List<String> values) {
            addCriterion("TOKEN in", values, "token");
            return (Criteria) this;
        }

        /**
         * And token not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andTokenNotIn(List<String> values) {
            addCriterion("TOKEN not in", values, "token");
            return (Criteria) this;
        }

        /**
         * And token between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andTokenBetween(String value1, String value2) {
            addCriterion("TOKEN between", value1, value2, "token");
            return (Criteria) this;
        }

        /**
         * And token not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andTokenNotBetween(String value1, String value2) {
            addCriterion("TOKEN not between", value1, value2, "token");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table sys_users
     * 
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * Instantiates a new criteria.
         */
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table sys_users
     * 
     * @mbggenerated
     */
    public static class Criterion {

        /** The condition. */
        private String condition;

        /** The value. */
        private Object value;

        /** The second value. */
        private Object secondValue;

        /** The no value. */
        private boolean noValue;

        /** The single value. */
        private boolean singleValue;

        /** The between value. */
        private boolean betweenValue;

        /** The list value. */
        private boolean listValue;

        /** The type handler. */
        private String typeHandler;

        /**
         * Gets the condition.
         *
         * @return the condition
         */
        public String getCondition() {
            return condition;
        }

        /**
         * Gets the value.
         *
         * @return the value
         */
        public Object getValue() {
            return value;
        }

        /**
         * Gets the second value.
         *
         * @return the second value
         */
        public Object getSecondValue() {
            return secondValue;
        }

        /**
         * Checks if is no value.
         *
         * @return true, if is no value
         */
        public boolean isNoValue() {
            return noValue;
        }

        /**
         * Checks if is single value.
         *
         * @return true, if is single value
         */
        public boolean isSingleValue() {
            return singleValue;
        }

        /**
         * Checks if is between value.
         *
         * @return true, if is between value
         */
        public boolean isBetweenValue() {
            return betweenValue;
        }

        /**
         * Checks if is list value.
         *
         * @return true, if is list value
         */
        public boolean isListValue() {
            return listValue;
        }

        /**
         * Gets the type handler.
         *
         * @return the type handler
         */
        public String getTypeHandler() {
            return typeHandler;
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         */
        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param typeHandler the type handler
         */
        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         */
        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param secondValue the second value
         * @param typeHandler the type handler
         */
        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param secondValue the second value
         */
        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
