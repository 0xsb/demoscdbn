/**
 * @author ldy
 */
package com.cmcc.ms.entity.usermanage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;


/**
 * The Class UsrManageBatchMessageExample.
 */
public class UsrManageBatchMessageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    public UsrManageBatchMessageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @param orderByClause the new order by clause
     * @mbggenerated 
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @return the order by clause
     * @mbggenerated 
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @param distinct the new distinct
     * @mbggenerated 
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @return true, if is distinct
     * @mbggenerated 
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @return the ored criteria
     * @mbggenerated 
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @param criteria the criteria
     * @mbggenerated 
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @return the criteria
     * @mbggenerated 
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @return the criteria
     * @mbggenerated 
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @return the criteria
     * @mbggenerated 
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {

        /** The criteria. */
        protected List<Criterion> criteria;

        /**
         * Instantiates a new generated criteria.
         */
        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        /**
         * Checks if is valid.
         *
         * @return true, if is valid
         */
        public boolean isValid() {
            return criteria.size() > 0;
        }

        /**
         * Gets the all criteria.
         *
         * @return the all criteria
         */
        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**
         * Gets the criteria.
         *
         * @return the criteria
         */
        public List<Criterion> getCriteria() {
            return criteria;
        }

        /**
         * Adds the criterion.
         *
         * @param condition the condition
         */
        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        /**
         * Adds the criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param property the property
         */
        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        /**
         * Adds the criterion.
         *
         * @param condition the condition
         * @param value1 the value 1
         * @param value2 the value 2
         * @param property the property
         */
        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        /**
         * And id is null.
         *
         * @return the criteria
         */
        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        /**
         * And id is not null.
         *
         * @return the criteria
         */
        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        /**
         * And id equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        /**
         * And id not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        /**
         * And id greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        /**
         * And id greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        /**
         * And id less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        /**
         * And id less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        /**
         * And id in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        /**
         * And id not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        /**
         * And id between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        /**
         * And id not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        /**
         * And operate user name is null.
         *
         * @return the criteria
         */
        public Criteria andOperateUserNameIsNull() {
            addCriterion("OPERATE_USER_NAME is null");
            return (Criteria) this;
        }

        /**
         * And operate user name is not null.
         *
         * @return the criteria
         */
        public Criteria andOperateUserNameIsNotNull() {
            addCriterion("OPERATE_USER_NAME is not null");
            return (Criteria) this;
        }

        /**
         * And operate user name equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameEqualTo(String value) {
            addCriterion("OPERATE_USER_NAME =", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameNotEqualTo(String value) {
            addCriterion("OPERATE_USER_NAME <>", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameGreaterThan(String value) {
            addCriterion("OPERATE_USER_NAME >", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("OPERATE_USER_NAME >=", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameLessThan(String value) {
            addCriterion("OPERATE_USER_NAME <", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameLessThanOrEqualTo(String value) {
            addCriterion("OPERATE_USER_NAME <=", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameLike(String value) {
            addCriterion("OPERATE_USER_NAME like", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateUserNameNotLike(String value) {
            addCriterion("OPERATE_USER_NAME not like", value, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andOperateUserNameIn(List<String> values) {
            addCriterion("OPERATE_USER_NAME in", values, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andOperateUserNameNotIn(List<String> values) {
            addCriterion("OPERATE_USER_NAME not in", values, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andOperateUserNameBetween(String value1, String value2) {
            addCriterion("OPERATE_USER_NAME between", value1, value2, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And operate user name not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andOperateUserNameNotBetween(String value1, String value2) {
            addCriterion("OPERATE_USER_NAME not between", value1, value2, "operateUserName");
            return (Criteria) this;
        }

        /**
         * And msg state code is null.
         *
         * @return the criteria
         */
        public Criteria andMsgStateCodeIsNull() {
            addCriterion("MSG_STATE_CODE is null");
            return (Criteria) this;
        }

        /**
         * And msg state code is not null.
         *
         * @return the criteria
         */
        public Criteria andMsgStateCodeIsNotNull() {
            addCriterion("MSG_STATE_CODE is not null");
            return (Criteria) this;
        }

        /**
         * And msg state code equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateCodeEqualTo(Integer value) {
            addCriterion("MSG_STATE_CODE =", value, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateCodeNotEqualTo(Integer value) {
            addCriterion("MSG_STATE_CODE <>", value, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateCodeGreaterThan(Integer value) {
            addCriterion("MSG_STATE_CODE >", value, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("MSG_STATE_CODE >=", value, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateCodeLessThan(Integer value) {
            addCriterion("MSG_STATE_CODE <", value, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateCodeLessThanOrEqualTo(Integer value) {
            addCriterion("MSG_STATE_CODE <=", value, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andMsgStateCodeIn(List<Integer> values) {
            addCriterion("MSG_STATE_CODE in", values, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andMsgStateCodeNotIn(List<Integer> values) {
            addCriterion("MSG_STATE_CODE not in", values, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andMsgStateCodeBetween(Integer value1, Integer value2) {
            addCriterion("MSG_STATE_CODE between", value1, value2, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state code not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andMsgStateCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("MSG_STATE_CODE not between", value1, value2, "msgStateCode");
            return (Criteria) this;
        }

        /**
         * And msg state name is null.
         *
         * @return the criteria
         */
        public Criteria andMsgStateNameIsNull() {
            addCriterion("MSG_STATE_NAME is null");
            return (Criteria) this;
        }

        /**
         * And msg state name is not null.
         *
         * @return the criteria
         */
        public Criteria andMsgStateNameIsNotNull() {
            addCriterion("MSG_STATE_NAME is not null");
            return (Criteria) this;
        }

        /**
         * And msg state name equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameEqualTo(String value) {
            addCriterion("MSG_STATE_NAME =", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameNotEqualTo(String value) {
            addCriterion("MSG_STATE_NAME <>", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameGreaterThan(String value) {
            addCriterion("MSG_STATE_NAME >", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameGreaterThanOrEqualTo(String value) {
            addCriterion("MSG_STATE_NAME >=", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameLessThan(String value) {
            addCriterion("MSG_STATE_NAME <", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameLessThanOrEqualTo(String value) {
            addCriterion("MSG_STATE_NAME <=", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameLike(String value) {
            addCriterion("MSG_STATE_NAME like", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name not like.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgStateNameNotLike(String value) {
            addCriterion("MSG_STATE_NAME not like", value, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andMsgStateNameIn(List<String> values) {
            addCriterion("MSG_STATE_NAME in", values, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andMsgStateNameNotIn(List<String> values) {
            addCriterion("MSG_STATE_NAME not in", values, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andMsgStateNameBetween(String value1, String value2) {
            addCriterion("MSG_STATE_NAME between", value1, value2, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg state name not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andMsgStateNameNotBetween(String value1, String value2) {
            addCriterion("MSG_STATE_NAME not between", value1, value2, "msgStateName");
            return (Criteria) this;
        }

        /**
         * And msg send time is null.
         *
         * @return the criteria
         */
        public Criteria andMsgSendTimeIsNull() {
            addCriterion("MSG_SEND_TIME is null");
            return (Criteria) this;
        }

        /**
         * And msg send time is not null.
         *
         * @return the criteria
         */
        public Criteria andMsgSendTimeIsNotNull() {
            addCriterion("MSG_SEND_TIME is not null");
            return (Criteria) this;
        }

        /**
         * And msg send time equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgSendTimeEqualTo(Date value) {
            addCriterion("MSG_SEND_TIME =", value, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgSendTimeNotEqualTo(Date value) {
            addCriterion("MSG_SEND_TIME <>", value, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgSendTimeGreaterThan(Date value) {
            addCriterion("MSG_SEND_TIME >", value, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgSendTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("MSG_SEND_TIME >=", value, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgSendTimeLessThan(Date value) {
            addCriterion("MSG_SEND_TIME <", value, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andMsgSendTimeLessThanOrEqualTo(Date value) {
            addCriterion("MSG_SEND_TIME <=", value, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andMsgSendTimeIn(List<Date> values) {
            addCriterion("MSG_SEND_TIME in", values, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andMsgSendTimeNotIn(List<Date> values) {
            addCriterion("MSG_SEND_TIME not in", values, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andMsgSendTimeBetween(Date value1, Date value2) {
            addCriterion("MSG_SEND_TIME between", value1, value2, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And msg send time not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andMsgSendTimeNotBetween(Date value1, Date value2) {
            addCriterion("MSG_SEND_TIME not between", value1, value2, "msgSendTime");
            return (Criteria) this;
        }

        /**
         * And receive num is null.
         *
         * @return the criteria
         */
        public Criteria andReceiveNumIsNull() {
            addCriterion("RECEIVE_NUM is null");
            return (Criteria) this;
        }

        /**
         * And receive num is not null.
         *
         * @return the criteria
         */
        public Criteria andReceiveNumIsNotNull() {
            addCriterion("RECEIVE_NUM is not null");
            return (Criteria) this;
        }

        /**
         * And receive num equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andReceiveNumEqualTo(Integer value) {
            addCriterion("RECEIVE_NUM =", value, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andReceiveNumNotEqualTo(Integer value) {
            addCriterion("RECEIVE_NUM <>", value, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andReceiveNumGreaterThan(Integer value) {
            addCriterion("RECEIVE_NUM >", value, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andReceiveNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("RECEIVE_NUM >=", value, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andReceiveNumLessThan(Integer value) {
            addCriterion("RECEIVE_NUM <", value, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andReceiveNumLessThanOrEqualTo(Integer value) {
            addCriterion("RECEIVE_NUM <=", value, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andReceiveNumIn(List<Integer> values) {
            addCriterion("RECEIVE_NUM in", values, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andReceiveNumNotIn(List<Integer> values) {
            addCriterion("RECEIVE_NUM not in", values, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andReceiveNumBetween(Integer value1, Integer value2) {
            addCriterion("RECEIVE_NUM between", value1, value2, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And receive num not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andReceiveNumNotBetween(Integer value1, Integer value2) {
            addCriterion("RECEIVE_NUM not between", value1, value2, "receiveNum");
            return (Criteria) this;
        }

        /**
         * And operate time is null.
         *
         * @return the criteria
         */
        public Criteria andOperateTimeIsNull() {
            addCriterion("OPERATE_TIME is null");
            return (Criteria) this;
        }

        /**
         * And operate time is not null.
         *
         * @return the criteria
         */
        public Criteria andOperateTimeIsNotNull() {
            addCriterion("OPERATE_TIME is not null");
            return (Criteria) this;
        }

        /**
         * And operate time equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateTimeEqualTo(Date value) {
            addCriterion("OPERATE_TIME =", value, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time not equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateTimeNotEqualTo(Date value) {
            addCriterion("OPERATE_TIME <>", value, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time greater than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateTimeGreaterThan(Date value) {
            addCriterion("OPERATE_TIME >", value, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time greater than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("OPERATE_TIME >=", value, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time less than.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateTimeLessThan(Date value) {
            addCriterion("OPERATE_TIME <", value, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time less than or equal to.
         *
         * @param value the value
         * @return the criteria
         */
        public Criteria andOperateTimeLessThanOrEqualTo(Date value) {
            addCriterion("OPERATE_TIME <=", value, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andOperateTimeIn(List<Date> values) {
            addCriterion("OPERATE_TIME in", values, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time not in.
         *
         * @param values the values
         * @return the criteria
         */
        public Criteria andOperateTimeNotIn(List<Date> values) {
            addCriterion("OPERATE_TIME not in", values, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andOperateTimeBetween(Date value1, Date value2) {
            addCriterion("OPERATE_TIME between", value1, value2, "operateTime");
            return (Criteria) this;
        }

        /**
         * And operate time not between.
         *
         * @param value1 the value 1
         * @param value2 the value 2
         * @return the criteria
         */
        public Criteria andOperateTimeNotBetween(Date value1, Date value2) {
            addCriterion("OPERATE_TIME not between", value1, value2, "operateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * Instantiates a new criteria.
         */
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usr_manage_batch_message
     *
     * @mbggenerated
     */
    public static class Criterion {

        /** The condition. */
        private String condition;

        /** The value. */
        private Object value;

        /** The second value. */
        private Object secondValue;

        /** The no value. */
        private boolean noValue;

        /** The single value. */
        private boolean singleValue;

        /** The between value. */
        private boolean betweenValue;

        /** The list value. */
        private boolean listValue;

        /** The type handler. */
        private String typeHandler;

        /**
         * Gets the condition.
         *
         * @return the condition
         */
        public String getCondition() {
            return condition;
        }

        /**
         * Gets the value.
         *
         * @return the value
         */
        public Object getValue() {
            return value;
        }

        /**
         * Gets the second value.
         *
         * @return the second value
         */
        public Object getSecondValue() {
            return secondValue;
        }

        /**
         * Checks if is no value.
         *
         * @return true, if is no value
         */
        public boolean isNoValue() {
            return noValue;
        }

        /**
         * Checks if is single value.
         *
         * @return true, if is single value
         */
        public boolean isSingleValue() {
            return singleValue;
        }

        /**
         * Checks if is between value.
         *
         * @return true, if is between value
         */
        public boolean isBetweenValue() {
            return betweenValue;
        }

        /**
         * Checks if is list value.
         *
         * @return true, if is list value
         */
        public boolean isListValue() {
            return listValue;
        }

        /**
         * Gets the type handler.
         *
         * @return the type handler
         */
        public String getTypeHandler() {
            return typeHandler;
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         */
        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param typeHandler the type handler
         */
        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         */
        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param secondValue the second value
         * @param typeHandler the type handler
         */
        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        /**
         * Instantiates a new criterion.
         *
         * @param condition the condition
         * @param value the value
         * @param secondValue the second value
         */
        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
